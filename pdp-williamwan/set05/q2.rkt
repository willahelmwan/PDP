#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1573 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e q2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 19 #";; Goal: Design to "
0 0 17 3 26 #"idealized data types, one "
0 0 17 3 29 #"represents perfectly circular"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; pancakes, the other one represents perfectly circular frying pan,"
 #" and"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";; write functions to "
0 0 17 3 55 #"determine the overlapping pancakes and non-overlapping,"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; and the pancakes that are in the frying pan. "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-location"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"05\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"q2.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 13 #"make-flapjack"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 10 #"flapjack-x"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 10 #"flapjack-y"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 15 #"flapjack-radius"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 12 #"make-skillet"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 9 #"skillet-x"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 9 #"skillet-y"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 14 #"skillet-radius"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 21 #"overlapping-flapjacks"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 25 #"non-overlapping-flapjacks"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 20 #"flapjacks-in-skillet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; DATA DEFINITIONS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"flapjack"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; A Flapjack is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;  (make-flapjack Real Real PosReal)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; x is the x-position of the Flapjack"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; y is the y-position of the Flapjack"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; radius is the radius of the Flapjack"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; flapjack-fn : Flapjack -> ??"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"flapjack-fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"flapjack-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"flapjack-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"flapjack-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Examples of Flapjack, for testing"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"skillet"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; A Skillet is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;  (make-skillet Real Real PosReal)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; x is the x-position of the Skillet"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; y is the y-position of the Skillet"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; radius is the radius of the Skillet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; skillet-fn : Skillet -> ??"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"skillet-fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"skillet-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"skillet-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"skillet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; A ListOfFlapjack (LOF) is either"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; -- empty"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; -- (cons Flapjack ListOfFlapjack)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; empty is a sequence of Flapjack with no elements"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (cons f lst) represents "
0 0 17 3 24 #"a sequence of Flapjacks "
0 0 17 3 28 #"whose first element is f and"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; whose other elements are represented by lst."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; lof-fn : ListOfFlapjack -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; HALTING MEASURE: length of lst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lof-fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"flapjack-fn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"lof-fn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Examples of List of Flapjacks, for testing"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"7.2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; A ListOfListOfFlapjack (LLOF) is either"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; -- empty"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; -- (cons ListOfFlapjack ListOfListOfFlapjack)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; empty is a sequence of ListOfFlapjack with no elements"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; (cons lstf lst) represents a sequence of ListOfFlapjacks whose"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; first"
0 0 17 3 1 #" "
0 0 17 3 7 #"element"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"lstf"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 5 #"whose"
0 0 17 3 1 #" "
0 0 17 3 38 #"other elements are represented by lst."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; llof-fn : ListOfListOfFlapjack -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; HALTING MEASURE: length of lst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"llof-fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"lof-fn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"llof-fn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Examples of List of List of Flapjack, for testing."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"lstlst1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 8          10 4 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 8          10 4 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 4 5 #"21/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; END DATA DEFINITIONS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Helper functions:"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; overlaps? : Flapjack Flapjack -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; GIVEN: two Flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; RETURNS: true iff the two Flapjacks overlaps"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;(overlaps? (make-flapjack -10 2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;           "
0 0 17 3 30 #"(make-flapjack -3 0 4)) = true"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;(overlaps? (make-flapjack 7.2 6 5)"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;           "
0 0 17 3 43 #"(make-flapjack 20 4 4.2)) = false          "
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; STRATEGY: Use template for Flapjack on f1 and f2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"overlaps?"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"flapjack-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"flapjack-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"flapjack-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"flapjack-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 15 #"flapjack-radius"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 3 #") ("
0 0 14 3 15 #"flapjack-radius"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; fit-in? : Flapjack Skillet -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; GIVEN: one Flapjacks and one Skillet"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; RETURNS: true iff the Flapjack fits entirely inside of the Skille"
 #"t. "
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 7 #"fit-in?"
0 0 17 3 2 #" ("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 3 #") ("
0 0 17 3 12 #"make-skillet"
0 0 17 3 17 #" 2 3 12)) = false"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 7 #"fit-in?"
0 0 17 3 2 #" ("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 2 #"13"
0 0 17 3 3 #") ("
0 0 17 3 12 #"make-skillet"
0 0 17 3 17 #" 2 3 12)) = false"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 7 #"fit-in?"
0 0 17 3 2 #" ("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 3 #") ("
0 0 17 3 12 #"make-skillet"
0 0 17 3 16 #" 2 3 12)) = true"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; STRATEGY: Use template for Flapjack on f or template for Skillet "
 #"on s"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"fit-in?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 14 #"skillet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 15 #"flapjack-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"flapjack-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 9 #"skillet-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"flapjack-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 9 #"skillet-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 14 #"skillet-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 15 #"flapjack-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; overlap-jacks : ListOfFlapjack Flapjack -> ListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; GIVEN: a List of Flapjacks and a Flapjack"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: a List of Flapjacks that overlaps with the given Flapjac"
 #"k."
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; (overlap-jacks lst1 (make-flapjack -10 2 5)) ="
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;     (list (make-flapjack -10 2 5) (make-flapjack -3 0 4))"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; (overlap-jacks empty (make-flapjack -10 2 5) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; STRATEGY: Use HOF filter on lst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlap-jacks"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 22 #";; Flapjack -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 21 #";; RETURNS: true iff "
0 0 17 3 48 #"the given Flapjack overlaps with the Flapjack f."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"f2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"overlaps?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; overlap-jacks-lists : "
0 0 17 3 53 #"ListOfFlapjack ListOfFlapjack -> ListOfListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; GIVEN: two List of Flapjacks lst1 and lst2"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURNS: a list of the same length as lst1 whose i-th element is "
 #"a list"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";;          of the Flapjacks in lst2 that overlap with the i-th"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;          Flapjack in lst1."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; (overlap-jacks-lists lst1 lst1) ="
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;    (list"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;     (list "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 28 #"2 5) (make-flapjack -3 0 4))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;     (list "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 3 #"-10"
0 0 17 3 1 #" "
0 0 17 3 27 #"2 5) (make-flapjack -3 0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;           "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 2 #"-2"
0 0 17 3 1 #" "
0 8          10 17 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;     (list "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 2 #"-3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 3 #"4) "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 2 #"-2"
0 0 17 3 1 #" "
0 8          10 17 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;           "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 8          10 17 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 6 #" 6 5))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;     (list "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 2 #"-2"
0 0 17 3 1 #" "
0 8          10 17 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"m"
0 0 17 3 12 #"ake-flapjack"
0 0 17 3 1 #" "
0 8          10 17 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 6 #" 6 5))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;     (list "
0 0 17 3 1 #"("
0 0 17 3 13 #"make-flapjack"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 8          10 17 5 #"21/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; STRATEGY: Use HOF map on lst1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"overlap-jacks-lists"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 29 #";; Flapjack -> ListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 70
(
 #";; RETURNS: a List of Flapjacks that overlaps with the given Flapjac"
 #"k."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 13 #"overlap-jacks"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst2"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"lst1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; non-overlap-jacks-list : ListOfListOfFlapjack -> ListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; GIVEN: a list of list of Flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; RETURNS: a list of "
0 0 17 3 22 #"Flapjacks that do not "
0 0 17 3 33 #"overlap with any other flapjacks."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (non-overlap-jacks-list "
0 0 17 3 17 #"lstlst1) = (list "
0 0 17 3 18 #"(make-flapjack 20 "
0 0 17 3 2 #"4 "
0 8          10 17 5 #"21/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; STRATEGY: Use a combination of HOF map and filter on lst."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"non-overlap-jacks-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"first"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 28 #";; ListOfFlapjack -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 57 #";; RETURNS: true iff the List of Flapjack is length of 1."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lst1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Functions"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; overlapping-flapjacks : ListOfFlapjack -> ListOfListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; GIVEN: a List of Flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURNS: a list of the same length whose i-th element is a list o"
 #"f the"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";;          Flapjacks in "
0 0 17 3 20 #"the given list that "
0 0 17 3 30 #"overlap with the i-th Flapjack"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;          in the given list."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (overlapping-flapjacks empty) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; (overlapping-flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (list (make-flapjack -10 2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;          (make-flapjack -3 0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;          (make-flapjack 4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;          (make-flapjack 7.2 6 5)"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;          (make-flapjack 20 4 4.2))) ="
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;    (list (list (make-flapjack -10  2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                (make-flapjack  -3  0 4))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;          (list (make-flapjack -10  2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;                (make-flapjack  -3  0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                (make-flapjack   4 -2 4.6))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;          (list (make-flapjack  -3  0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;                (make-flapjack   4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                (make-flapjack 7.2  6 5))"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;          (list (make-flapjack   4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                (make-flapjack 7.2  6 5))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;          (list (make-flapjack  20  4 4.2)))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; STRATEGY: Combine simpler functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"overlap-jacks-lists"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 21 #"overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 52 #"\"(overlapping-flapjacks empty) should return empty.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 21 #"overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 8          10 4 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 8          10 4 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 4 5 #"21/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 1 #"\""
0 0 19 3 22 #"(overlapping-flapjacks"
0 0 19 3 1 #" "
0 0 19 3 19 #"lst1) returned the "
0 0 19 3 9 #"incorrect"
0 0 19 29 1 #"\n"
0 0 19 3 27 #"     ListOfListOfFlapjack.\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 60
#"non-overlapping-flapjacks : ListOfFlapjack -> ListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; GIVEN: a List of Flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; RETURNS: a list of the "
0 0 17 3 23 #"Flapjacks in the given "
0 0 17 3 29 #"list that do not overlap with"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;          any other flapjacks in the list."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; (non-overlapping-flapjacks empty) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (non-overlapping-flapjacks"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (list (make-flapjack -10 2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;          (make-flapjack -3 0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;          (make-flapjack 4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;          (make-flapjack 7.2 6 5)"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;          (make-flapjack 20 4 4.2))) ="
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;    (list (make-flapjack  20  4 4.2)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; STRATEGY: Combine simpler functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"non-overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 22 #"non-overlap-jacks-list"
0 0 24 3 2 #" ("
0 0 14 3 21 #"overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 25 #"non-overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 56
#"\"(non-overlapping-flapjacks empty) should return empty.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 25 #"non-overlapping-flapjacks"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 4 5 #"21/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 63
#"\"(non-overlapping-flapjacks lst1) returned the incorrect list.\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; flapjacks-in-skillet : ListOfFlapjack Skillet -> ListOfFlapjack"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; GIVEN: a List of Flapjacks and Skillet"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; RETURNS: a list of the "
0 0 17 3 25 #"given Flapjacks that fit "
0 0 17 3 28 #"entirely within the skillet."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; (flapjacks-in-skillet"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (list (make-flapjack -10 2 5)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;          (make-flapjack -3 0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;          (make-flapjack 4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;          (make-flapjack 7.2 6 5)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;          (make-flapjack 20 4 4.2))"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;    (make-skillet 2 3 12)) ="
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (list (make-flapjack -3 0 4)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;       (make-flapjack 4 -2 4.6)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;       (make-flapjack 7.2 6 5)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; STRATEGY: Use HOF filter on lst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"flapjacks-in-skillet"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 22 #";; Flapjack -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 71
(
 #";; RETURNS:  true iff the Flapjack fits entirely inside of the Skill"
 #"et."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 7 #"fit-in?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"flapjacks-in-skillet"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-skillet"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 20 #"flapjacks-in-skillet"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 2 #" ("
0 0 19 3 12 #"make-skillet"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 3 #" 3 "
0 0 19 3 5 #"12)) "
0 0 19 3 21 #"should return empty.\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"flapjacks-in-skillet"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-skillet"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 8          10 4 5 #"23/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"make-flapjack"
0 0 24 3 1 #" "
0 8          10 4 5 #"36/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 20 #"flapjacks-in-skillet"
0 0 19 3 1 #" "
0 0 19 3 4 #"lst1"
0 0 19 3 2 #" ("
0 0 19 3 12 #"make-skillet"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 5 #"12)) "
0 0 19 3 8 #"returned"
0 0 19 29 1 #"\n"
0 0 19 3 26 #"      the incorrect list.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"flapjacks-in-skillet"
0 0 24 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-skillet"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 20 #"flapjacks-in-skillet"
0 0 19 3 1 #" "
0 0 19 3 4 #"lst1"
0 0 19 3 2 #" ("
0 0 19 3 12 #"make-skillet"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 26 #" 1)) should return empty.\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
